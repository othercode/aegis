name: Test and Analysis

on:
  push:
    branches: [ master, develop ]
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: password
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      matrix:
        php-version: [ "8.1", "8.2" ]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: php-${{ matrix.php-version }}-composer-

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Set up PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: xdebug
          tools: composer:v2

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate

      - name: Clear Config
        run: php artisan config:clear

      - name: Deploy Database Migrations
        run: php artisan migrate -v
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      - name: Execute Unit, Integration and Acceptance Tests
        run: php artisan test
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

